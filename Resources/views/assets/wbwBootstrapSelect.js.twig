{# Resources/views/assets/wbwBootstrapSelect.js.twig #}
/*
 * This file is part of the bootstrap-bundle package.
 *
 * (c) 2022 WEBEWEB
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 * Bootstrap select.
 *
 * @author webeweb <https://github.com/webeweb>
 */
class WBWBootstrapSelect {

    /**
     * Destroy a select picker.
     *
     * @param {jQuery} $el The element.
     * @return {undefined}
     */
    static destroy($el) {
        $el.selectpicker("destroy");
    }

    /**
     * Refresh a select picker.
     *
     * @param {jQuery} $el The element.
     * @return {undefined}
     */
    static refresh($el) {
        $el.selectpicker("refresh");
    }

    /**
     * Displays a select picker.
     *
     * @param {jQuery} $el The element.
     * @return {undefined}
     */
    static selectPicker($el) {

        $el.selectpicker({
            container: "body", // https://developer.snapappointments.com/bootstrap-select/examples/#container
        });
    }

    /**
     * Update a select picker.
     *
     * @param {jQuery} $el The element.
     * @param {Object} options The options.
     * @return {undefined}
     */
    static update($el, options) {

        const displays = ["none", "list-item"];

        const $select = $el;
        const $option = $select.find("option:selected");

        $select.find('option[value!=""]').css("display", displays[0]).prop("selected", false);

        options.forEach((option) => {
            $select.find('option[value="' + option.value + '"]').css("display", displays[1]);
        });

        if (displays[1] === $option.css("display")) {
            $option.prop("selected", true);
        } else {
            $select.find("option:visible").first().prop("selected", true);
        }

        WBWBootstrapSelect.refresh($select);
    }
}
